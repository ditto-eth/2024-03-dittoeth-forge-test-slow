{"abi":[{"type":"function","name":"aggregate","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"},{"type":"function","name":"aggregate3","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call3[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"allowFailure","type":"bool","internalType":"bool"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"aggregate3Value","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call3Value[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"allowFailure","type":"bool","internalType":"bool"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"blockAndAggregate","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"getBasefee","inputs":[],"outputs":[{"name":"basefee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockHash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getChainId","inputs":[],"outputs":[{"name":"chainid","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockCoinbase","inputs":[],"outputs":[{"name":"coinbase","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockDifficulty","inputs":[],"outputs":[{"name":"difficulty","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockGasLimit","inputs":[],"outputs":[{"name":"gaslimit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getEthBalance","inputs":[{"name":"addr","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastBlockHash","inputs":[],"outputs":[{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"tryAggregate","inputs":[{"name":"requireSuccess","type":"bool","internalType":"bool"},{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"tryBlockAndAggregate","inputs":[{"name":"requireSuccess","type":"bool","internalType":"bool"},{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"}],"bytecode":{"object":"","sourceMap":"568:9303:64:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"","sourceMap":"568:9303:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8958:120;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5977:2017;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1232:562;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;9322:158;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9769:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3054:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;9626:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8291:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9145:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8618:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4217:1522;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8792:116;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8451;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2079:593;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3776:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;8110:134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8958:120;9015:17;9056:15;9044:27;;8958:120;:::o;5977:2017::-;6055:26;6093:22;6125:14;6142:5;;:12;;6125:29;;6190:6;6177:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6164:33;;6207:25;6247:9;6242:1601;6266:6;6262:1;:10;6242:1601;;;6289:20;6312:10;6323:1;6312:13;;;;;;;;:::i;:::-;;;;;;;;6289:36;;6347:5;;6353:1;6347:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;6339:16;;6369:11;6383:5;:11;;;6369:25;;6629:3;6611:21;;;;6698:5;:12;;;;;;;;;;:::i;:::-;:17;;6723:3;6728:5;:14;;;;;;;;:::i;:::-;6698:45;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6661:6;:14;;6677:6;:17;;6660:83;;;;;;;;;;;;;7005:6;6999:13;6991:4;6984:5;6980:16;6967:30;6964:49;6954:806;;7148:66;7142:4;7135:80;7288:66;7282:4;7275:80;7440:66;7434:4;7427:80;7636:66;7630:4;7623:80;7737:4;7731;7724:18;6954:806;7815:3;;;;;6275:1568;;6242:1601;;;;7942:14;7929:9;:27;7921:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6083:1911;;;5977:2017;;;;:::o;1232:562::-;1298:19;1319:25;1370:12;1356:26;;1392:14;1409:5;;:12;;1392:29;;1456:6;1444:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:32;;1473:18;1506:9;1501:287;1525:6;1521:1;:10;1501:287;;;1548:12;1581:5;;1587:1;1581:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;1574:15;;1630:4;:11;;;;;;;;;;:::i;:::-;:16;;1647:4;:13;;;;;;;;:::i;:::-;1630:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:10;1624:1;1613:13;;;;;;;;:::i;:::-;;;;;;;1603:58;;;;;;;;1683:7;1675:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1760:3;;;;;1534:254;1501:287;;;;1346:448;;1232:562;;;;;:::o;9322:158::-;9371:17;9461:1;9446:12;:16;9436:27;9424:39;;9322:158;:::o;9769:100::-;9812:15;9849:13;9839:23;;9769:100;:::o;3054:340::-;3176:19;3197:17;3216:26;3272:12;3258:26;;3316:12;3306:23;3294:35;;3352;3365:14;3381:5;;3352:12;:35::i;:::-;3339:48;;3054:340;;;;;;;:::o;9626:100::-;9669:15;9706:13;9696:23;;9626:100;:::o;8291:111::-;8338:19;8383:12;8369:26;;8291:111;:::o;9145:114::-;9203:15;9240:4;:12;;;9230:22;;9145:114;;;:::o;8618:124::-;8676:18;8719:16;8706:29;;8618:124;:::o;4217:1522::-;4285:26;4323:14;4340:5;;:12;;4323:29;;4388:6;4375:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4362:33;;4405:20;4440:9;4435:1298;4459:6;4455:1;:10;4435:1298;;;4482:20;4505:10;4516:1;4505:13;;;;;;;;:::i;:::-;;;;;;;;4482:36;;4540:5;;4546:1;4540:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;4532:16;;4600:5;:12;;;;;;;;;;:::i;:::-;:17;;4618:5;:14;;;;;;;;:::i;:::-;4600:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:6;:14;;4579:6;:17;;4562:71;;;;;;;;;;;;;4895:6;4889:13;4881:4;4874:5;4870:16;4857:30;4854:49;4844:806;;5038:66;5032:4;5025:80;5178:66;5172:4;5165:80;5330:66;5324:4;5317:80;5526:66;5520:4;5513:80;5627:4;5621;5614:18;4844:806;5705:3;;;;;4468:1265;4435:1298;;;;4313:1426;;4217:1522;;;;:::o;8792:116::-;8848:16;8887:14;8876:25;;8792:116;:::o;8451:::-;8507:16;8546:14;8535:25;;8451:116;:::o;2079:593::-;2169:26;2207:14;2224:5;;:12;;2207:29;;2272:6;2259:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2246:33;;2289:18;2322:9;2317:349;2341:6;2337:1;:10;2317:349;;;2364:20;2387:10;2398:1;2387:13;;;;;;;;:::i;:::-;;;;;;;;2364:36;;2421:5;;2427:1;2421:8;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;2414:15;;2481:4;:11;;;;;;;;;;:::i;:::-;:16;;2498:4;:13;;;;;;;;:::i;:::-;2481:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2444:6;:14;;2460:6;:17;;2443:69;;;;;;;;;;;;;2530:14;2526:70;;;2554:6;:14;;;2546:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2526:70;2638:3;;;;;2350:316;2317:349;;;;2197:475;;2079:593;;;;;:::o;3776:259::-;3874:19;3895:17;3914:26;3995:33;4016:4;4022:5;;3995:20;:33::i;:::-;3956:72;;;;;;;;;;;;3776:259;;;;;:::o;8110:134::-;8174:17;8225:11;8215:22;8203:34;;8110:134;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:238:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:117;878:1;875;868:12;892:117;1001:1;998;991:12;1015:117;1124:1;1121;1114:12;1176:599;1280:8;1290:6;1340:3;1333:4;1325:6;1321:17;1317:27;1307:122;;1348:79;;:::i;:::-;1307:122;1461:6;1448:20;1438:30;;1491:18;1483:6;1480:30;1477:117;;;1513:79;;:::i;:::-;1477:117;1627:4;1619:6;1615:17;1603:29;;1681:3;1673:4;1665:6;1661:17;1651:8;1647:32;1644:41;1641:128;;;1688:79;;:::i;:::-;1641:128;1176:599;;;;;:::o;1781:621::-;1898:6;1906;1955:2;1943:9;1934:7;1930:23;1926:32;1923:119;;;1961:79;;:::i;:::-;1923:119;2109:1;2098:9;2094:17;2081:31;2139:18;2131:6;2128:30;2125:117;;;2161:79;;:::i;:::-;2125:117;2274:111;2377:7;2368:6;2357:9;2353:22;2274:111;:::i;:::-;2256:129;;;;2052:343;1781:621;;;;;:::o;2408:139::-;2500:6;2534:5;2528:12;2518:22;;2408:139;;;:::o;2553:209::-;2677:11;2711:6;2706:3;2699:19;2751:4;2746:3;2742:14;2727:29;;2553:209;;;;:::o;2768:157::-;2860:4;2883:3;2875:11;;2913:4;2908:3;2904:14;2896:22;;2768:157;;;:::o;2931:90::-;2965:7;3008:5;3001:13;2994:21;2983:32;;2931:90;;;:::o;3027:99::-;3098:21;3113:5;3098:21;:::i;:::-;3093:3;3086:34;3027:99;;:::o;3132:98::-;3183:6;3217:5;3211:12;3201:22;;3132:98;;;:::o;3236:158::-;3309:11;3343:6;3338:3;3331:19;3383:4;3378:3;3374:14;3359:29;;3236:158;;;;:::o;3400:246::-;3481:1;3491:113;3505:6;3502:1;3499:13;3491:113;;;3590:1;3585:3;3581:11;3575:18;3571:1;3566:3;3562:11;3555:39;3527:2;3524:1;3520:10;3515:15;;3491:113;;;3638:1;3629:6;3624:3;3620:16;3613:27;3462:184;3400:246;;;:::o;3652:102::-;3693:6;3744:2;3740:7;3735:2;3728:5;3724:14;3720:28;3710:38;;3652:102;;;:::o;3760:353::-;3836:3;3864:38;3896:5;3864:38;:::i;:::-;3918:60;3971:6;3966:3;3918:60;:::i;:::-;3911:67;;3987:65;4045:6;4040:3;4033:4;4026:5;4022:16;3987:65;:::i;:::-;4077:29;4099:6;4077:29;:::i;:::-;4072:3;4068:39;4061:46;;3840:273;3760:353;;;;:::o;4179:597::-;4288:3;4324:4;4319:3;4315:14;4414:4;4407:5;4403:16;4397:23;4433:57;4484:4;4479:3;4475:14;4461:12;4433:57;:::i;:::-;4339:161;4588:4;4581:5;4577:16;4571:23;4641:3;4635:4;4631:14;4624:4;4619:3;4615:14;4608:38;4667:71;4733:4;4719:12;4667:71;:::i;:::-;4659:79;;4510:239;4766:4;4759:11;;4293:483;4179:597;;;;:::o;4782:256::-;4901:10;4936:96;5028:3;5020:6;4936:96;:::i;:::-;4922:110;;4782:256;;;;:::o;5044:138::-;5139:4;5171;5166:3;5162:14;5154:22;;5044:138;;;:::o;5252:1111::-;5421:3;5450:79;5523:5;5450:79;:::i;:::-;5545:111;5649:6;5644:3;5545:111;:::i;:::-;5538:118;;5682:3;5727:4;5719:6;5715:17;5710:3;5706:27;5757:81;5832:5;5757:81;:::i;:::-;5861:7;5892:1;5877:441;5902:6;5899:1;5896:13;5877:441;;;5973:9;5967:4;5963:20;5958:3;5951:33;6024:6;6018:13;6052:114;6161:4;6146:13;6052:114;:::i;:::-;6044:122;;6189:85;6267:6;6189:85;:::i;:::-;6179:95;;6303:4;6298:3;6294:14;6287:21;;5937:381;5924:1;5921;5917:9;5912:14;;5877:441;;;5881:14;6334:4;6327:11;;6354:3;6347:10;;5426:937;;;;;5252:1111;;;;:::o;6369:473::-;6562:4;6600:2;6589:9;6585:18;6577:26;;6649:9;6643:4;6639:20;6635:1;6624:9;6620:17;6613:47;6677:158;6830:4;6821:6;6677:158;:::i;:::-;6669:166;;6369:473;;;;:::o;6880:593::-;6978:8;6988:6;7038:3;7031:4;7023:6;7019:17;7015:27;7005:122;;7046:79;;:::i;:::-;7005:122;7159:6;7146:20;7136:30;;7189:18;7181:6;7178:30;7175:117;;;7211:79;;:::i;:::-;7175:117;7325:4;7317:6;7313:17;7301:29;;7379:3;7371:4;7363:6;7359:17;7349:8;7345:32;7342:41;7339:128;;;7386:79;;:::i;:::-;7339:128;6880:593;;;;;:::o;7479:609::-;7590:6;7598;7647:2;7635:9;7626:7;7622:23;7618:32;7615:119;;;7653:79;;:::i;:::-;7615:119;7801:1;7790:9;7786:17;7773:31;7831:18;7823:6;7820:30;7817:117;;;7853:79;;:::i;:::-;7817:117;7966:105;8063:7;8054:6;8043:9;8039:22;7966:105;:::i;:::-;7948:123;;;;7744:337;7479:609;;;;;:::o;8094:123::-;8170:6;8204:5;8198:12;8188:22;;8094:123;;;:::o;8223:193::-;8331:11;8365:6;8360:3;8353:19;8405:4;8400:3;8396:14;8381:29;;8223:193;;;;:::o;8422:141::-;8498:4;8521:3;8513:11;;8551:4;8546:3;8542:14;8534:22;;8422:141;;;:::o;8569:192::-;8656:10;8691:64;8751:3;8743:6;8691:64;:::i;:::-;8677:78;;8569:192;;;;:::o;8767:122::-;8846:4;8878;8873:3;8869:14;8861:22;;8767:122;;;:::o;8921:983::-;9058:3;9087:63;9144:5;9087:63;:::i;:::-;9166:95;9254:6;9249:3;9166:95;:::i;:::-;9159:102;;9287:3;9332:4;9324:6;9320:17;9315:3;9311:27;9362:65;9421:5;9362:65;:::i;:::-;9450:7;9481:1;9466:393;9491:6;9488:1;9485:13;9466:393;;;9562:9;9556:4;9552:20;9547:3;9540:33;9613:6;9607:13;9641:82;9718:4;9703:13;9641:82;:::i;:::-;9633:90;;9746:69;9808:6;9746:69;:::i;:::-;9736:79;;9844:4;9839:3;9835:14;9828:21;;9526:333;9513:1;9510;9506:9;9501:14;;9466:393;;;9470:14;9875:4;9868:11;;9895:3;9888:10;;9063:841;;;;;8921:983;;;;:::o;9910:519::-;10099:4;10137:2;10126:9;10122:18;10114:26;;10150:71;10218:1;10207:9;10203:17;10194:6;10150:71;:::i;:::-;10268:9;10262:4;10258:20;10253:2;10242:9;10238:18;10231:48;10296:126;10417:4;10408:6;10296:126;:::i;:::-;10288:134;;9910:519;;;;;:::o;10435:77::-;10472:7;10501:5;10490:16;;10435:77;;;:::o;10518:118::-;10605:24;10623:5;10605:24;:::i;:::-;10600:3;10593:37;10518:118;;:::o;10642:222::-;10735:4;10773:2;10762:9;10758:18;10750:26;;10786:71;10854:1;10843:9;10839:17;10830:6;10786:71;:::i;:::-;10642:222;;;;:::o;10870:116::-;10940:21;10955:5;10940:21;:::i;:::-;10933:5;10930:32;10920:60;;10976:1;10973;10966:12;10920:60;10870:116;:::o;10992:133::-;11035:5;11073:6;11060:20;11051:29;;11089:30;11113:5;11089:30;:::i;:::-;10992:133;;;;:::o;11131:748::-;11248:6;11256;11264;11313:2;11301:9;11292:7;11288:23;11284:32;11281:119;;;11319:79;;:::i;:::-;11281:119;11439:1;11464:50;11506:7;11497:6;11486:9;11482:22;11464:50;:::i;:::-;11454:60;;11410:114;11591:2;11580:9;11576:18;11563:32;11622:18;11614:6;11611:30;11608:117;;;11644:79;;:::i;:::-;11608:117;11757:105;11854:7;11845:6;11834:9;11830:22;11757:105;:::i;:::-;11739:123;;;;11534:338;11131:748;;;;;:::o;11885:693::-;12134:4;12172:2;12161:9;12157:18;12149:26;;12185:71;12253:1;12242:9;12238:17;12229:6;12185:71;:::i;:::-;12266:72;12334:2;12323:9;12319:18;12310:6;12266:72;:::i;:::-;12385:9;12379:4;12375:20;12370:2;12359:9;12355:18;12348:48;12413:158;12566:4;12557:6;12413:158;:::i;:::-;12405:166;;11885:693;;;;;;:::o;12584:126::-;12621:7;12661:42;12654:5;12650:54;12639:65;;12584:126;;;:::o;12716:96::-;12753:7;12782:24;12800:5;12782:24;:::i;:::-;12771:35;;12716:96;;;:::o;12818:122::-;12891:24;12909:5;12891:24;:::i;:::-;12884:5;12881:35;12871:63;;12930:1;12927;12920:12;12871:63;12818:122;:::o;12946:139::-;12992:5;13030:6;13017:20;13008:29;;13046:33;13073:5;13046:33;:::i;:::-;12946:139;;;;:::o;13091:329::-;13150:6;13199:2;13187:9;13178:7;13174:23;13170:32;13167:119;;;13205:79;;:::i;:::-;13167:119;13325:1;13350:53;13395:7;13386:6;13375:9;13371:22;13350:53;:::i;:::-;13340:63;;13296:117;13091:329;;;;:::o;13459:594::-;13558:8;13568:6;13618:3;13611:4;13603:6;13599:17;13595:27;13585:122;;13626:79;;:::i;:::-;13585:122;13739:6;13726:20;13716:30;;13769:18;13761:6;13758:30;13755:117;;;13791:79;;:::i;:::-;13755:117;13905:4;13897:6;13893:17;13881:29;;13959:3;13951:4;13943:6;13939:17;13929:8;13925:32;13922:41;13919:128;;;13966:79;;:::i;:::-;13919:128;13459:594;;;;;:::o;14059:611::-;14171:6;14179;14228:2;14216:9;14207:7;14203:23;14199:32;14196:119;;;14234:79;;:::i;:::-;14196:119;14382:1;14371:9;14367:17;14354:31;14412:18;14404:6;14401:30;14398:117;;;14434:79;;:::i;:::-;14398:117;14547:106;14645:7;14636:6;14625:9;14621:22;14547:106;:::i;:::-;14529:124;;;;14325:338;14059:611;;;;;:::o;14676:118::-;14763:24;14781:5;14763:24;:::i;:::-;14758:3;14751:37;14676:118;;:::o;14800:222::-;14893:4;14931:2;14920:9;14916:18;14908:26;;14944:71;15012:1;15001:9;14997:17;14988:6;14944:71;:::i;:::-;14800:222;;;;:::o;15028:122::-;15101:24;15119:5;15101:24;:::i;:::-;15094:5;15091:35;15081:63;;15140:1;15137;15130:12;15081:63;15028:122;:::o;15156:139::-;15202:5;15240:6;15227:20;15218:29;;15256:33;15283:5;15256:33;:::i;:::-;15156:139;;;;:::o;15301:329::-;15360:6;15409:2;15397:9;15388:7;15384:23;15380:32;15377:119;;;15415:79;;:::i;:::-;15377:119;15535:1;15560:53;15605:7;15596:6;15585:9;15581:22;15560:53;:::i;:::-;15550:63;;15506:117;15301:329;;;;:::o;15636:180::-;15684:77;15681:1;15674:88;15781:4;15778:1;15771:15;15805:4;15802:1;15795:15;15822:180;15870:77;15867:1;15860:88;15967:4;15964:1;15957:15;15991:4;15988:1;15981:15;16008:117;16117:1;16114;16107:12;16131:117;16240:1;16237;16230:12;16254:117;16363:1;16360;16353:12;16377:397;16474:4;16528:11;16515:25;16628:1;16622:4;16618:12;16607:8;16591:14;16587:29;16583:48;16563:18;16559:73;16549:168;;16636:79;;:::i;:::-;16549:168;16748:18;16738:8;16734:33;16726:41;;16479:295;16377:397;;;;:::o;16780:724::-;16857:4;16863:6;16919:11;16906:25;17019:1;17013:4;17009:12;16998:8;16982:14;16978:29;16974:48;16954:18;16950:73;16940:168;;17027:79;;:::i;:::-;16940:168;17139:18;17129:8;17125:33;17117:41;;17191:4;17178:18;17168:28;;17219:18;17211:6;17208:30;17205:117;;;17241:79;;:::i;:::-;17205:117;17349:2;17343:4;17339:13;17331:21;;17406:4;17398:6;17394:17;17378:14;17374:38;17368:4;17364:49;17361:136;;;17416:79;;:::i;:::-;17361:136;16870:634;16780:724;;;;;:::o;17510:147::-;17611:11;17648:3;17633:18;;17510:147;;;;:::o;17663:146::-;17760:6;17755:3;17750;17737:30;17801:1;17792:6;17787:3;17783:16;17776:27;17663:146;;;:::o;17837:327::-;17951:3;17972:88;18053:6;18048:3;17972:88;:::i;:::-;17965:95;;18070:56;18119:6;18114:3;18107:5;18070:56;:::i;:::-;18151:6;18146:3;18142:16;18135:23;;17837:327;;;;;:::o;18170:291::-;18310:3;18332:103;18431:3;18422:6;18414;18332:103;:::i;:::-;18325:110;;18452:3;18445:10;;18170:291;;;;;:::o;18467:169::-;18551:11;18585:6;18580:3;18573:19;18625:4;18620:3;18616:14;18601:29;;18467:169;;;;:::o;18642:176::-;18782:28;18778:1;18770:6;18766:14;18759:52;18642:176;:::o;18824:366::-;18966:3;18987:67;19051:2;19046:3;18987:67;:::i;:::-;18980:74;;19063:93;19152:3;19063:93;:::i;:::-;19181:2;19176:3;19172:12;19165:19;;18824:366;;;:::o;19196:419::-;19362:4;19400:2;19389:9;19385:18;19377:26;;19449:9;19443:4;19439:20;19435:1;19424:9;19420:17;19413:47;19477:131;19603:4;19477:131;:::i;:::-;19469:139;;19196:419;;;:::o;19621:391::-;19712:4;19766:11;19753:25;19866:1;19860:4;19856:12;19845:8;19829:14;19825:29;19821:48;19801:18;19797:73;19787:168;;19874:79;;:::i;:::-;19787:168;19986:18;19976:8;19972:33;19964:41;;19717:295;19621:391;;;;:::o;20018:173::-;20158:25;20154:1;20146:6;20142:14;20135:49;20018:173;:::o;20197:366::-;20339:3;20360:67;20424:2;20419:3;20360:67;:::i;:::-;20353:74;;20436:93;20525:3;20436:93;:::i;:::-;20554:2;20549:3;20545:12;20538:19;;20197:366;;;:::o;20569:419::-;20735:4;20773:2;20762:9;20758:18;20750:26;;20822:9;20816:4;20812:20;20808:1;20797:9;20793:17;20786:47;20850:131;20976:4;20850:131;:::i;:::-;20842:139;;20569:419;;;:::o;20994:392::-;21086:4;21140:11;21127:25;21240:1;21234:4;21230:12;21219:8;21203:14;21199:29;21195:48;21175:18;21171:73;21161:168;;21248:79;;:::i;:::-;21161:168;21360:18;21350:8;21346:33;21338:41;;21091:295;20994:392;;;;:::o","linkReferences":{}},"methodIdentifiers":{"aggregate((address,bytes)[])":"252dba42","aggregate3((address,bool,bytes)[])":"82ad56cb","aggregate3Value((address,bool,uint256,bytes)[])":"174dea71","blockAndAggregate((address,bytes)[])":"c3077fa9","getBasefee()":"3e64a696","getBlockHash(uint256)":"ee82ac5e","getBlockNumber()":"42cbb15c","getChainId()":"3408e470","getCurrentBlockCoinbase()":"a8b0574e","getCurrentBlockDifficulty()":"72425d9d","getCurrentBlockGasLimit()":"86d516e8","getCurrentBlockTimestamp()":"0f28c97d","getEthBalance(address)":"4d2301cc","getLastBlockHash()":"27e86d6e","tryAggregate(bool,(address,bytes)[])":"bce38bd7","tryBlockAndAggregate(bool,(address,bytes)[])":"399542e9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3Value[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3Value\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"blockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basefee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryAggregate\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryBlockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>Andreas Bigger <andreas@nascent.xyz>Matt Solomon <matt@mattsolomon.dev>\",\"details\":\"Multicall & Multicall2 backwards-compatibleAggregate methods are marked `payable` to save 24 gas per call\",\"kind\":\"dev\",\"methods\":{\"aggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of bytes containing the responses\"}},\"aggregate3((address,bool,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3 structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3Value structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"blockAndAggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}},\"getBlockHash(uint256)\":{\"params\":{\"blockNumber\":\"The block number\"}},\"tryAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\",\"requireSuccess\":\"If true, require all calls to succeed\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}}},\"title\":\"Multicall3\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible call aggregation with Multicall\"},\"aggregate3((address,bool,bytes)[])\":{\"notice\":\"Aggregate calls, ensuring each returns success if required\"},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"notice\":\"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values\"},\"blockAndAggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"},\"getBasefee()\":{\"notice\":\"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain\"},\"getBlockHash(uint256)\":{\"notice\":\"Returns the block hash for the given block number\"},\"getBlockNumber()\":{\"notice\":\"Returns the block number\"},\"getChainId()\":{\"notice\":\"Returns the chain id\"},\"getCurrentBlockCoinbase()\":{\"notice\":\"Returns the block coinbase\"},\"getCurrentBlockDifficulty()\":{\"notice\":\"Returns the block difficulty\"},\"getCurrentBlockGasLimit()\":{\"notice\":\"Returns the block gas limit\"},\"getCurrentBlockTimestamp()\":{\"notice\":\"Returns the block timestamp\"},\"getEthBalance(address)\":{\"notice\":\"Returns the (ETH) balance of a given address\"},\"getLastBlockHash()\":{\"notice\":\"Returns the block hash of the last block\"},\"tryAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls without requiring success\"},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"}},\"notice\":\"Aggregate results from multiple function calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"deploy/MultiCall3.sol\":\"Multicall3\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@dittoeth/=node_modules/@dittoeth/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin-v5/=node_modules/@openzeppelin-v5/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/math/src/\",\":contracts/=contracts/\",\":deploy/=deploy/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/@dittoeth/forge-std/src/\",\":interfaces/=interfaces/\",\":solmate/=node_modules/solmate/src/\",\":test-gas/=test-gas/\",\":test/=test/\"]},\"sources\":{\"deploy/MultiCall3.sol\":{\"keccak256\":\"0x6e9c3a2d4d8a575e8f915c29f60deb64c9182a066eb0808df1a30cb6ba1604ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa319cd6412bd2f794b5f145fea0aa2f5ecf58c6f4550d6eb8165035e275a46\",\"dweb:/ipfs/QmUQE8KHzHwgQG3em4zz1f5iyEy6JzPKzxD43ERbogw3hu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}]},{"inputs":[{"internalType":"struct Multicall3.Call3[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate3","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Multicall3.Call3Value[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate3Value","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"blockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBasefee","outputs":[{"internalType":"uint256","name":"basefee","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getChainId","outputs":[{"internalType":"uint256","name":"chainid","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"view","type":"function","name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"tryAggregate","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"tryBlockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]}],"devdoc":{"kind":"dev","methods":{"aggregate((address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockNumber":"The block number where the calls were executed","returnData":"An array of bytes containing the responses"}},"aggregate3((address,bool,bytes)[])":{"params":{"calls":"An array of Call3 structs"},"returns":{"returnData":"An array of Result structs"}},"aggregate3Value((address,bool,uint256,bytes)[])":{"params":{"calls":"An array of Call3Value structs"},"returns":{"returnData":"An array of Result structs"}},"blockAndAggregate((address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockHash":"The hash of the block where the calls were executed","blockNumber":"The block number where the calls were executed","returnData":"An array of Result structs"}},"getBlockHash(uint256)":{"params":{"blockNumber":"The block number"}},"tryAggregate(bool,(address,bytes)[])":{"params":{"calls":"An array of Call structs","requireSuccess":"If true, require all calls to succeed"},"returns":{"returnData":"An array of Result structs"}},"tryBlockAndAggregate(bool,(address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockHash":"The hash of the block where the calls were executed","blockNumber":"The block number where the calls were executed","returnData":"An array of Result structs"}}},"version":1},"userdoc":{"kind":"user","methods":{"aggregate((address,bytes)[])":{"notice":"Backwards-compatible call aggregation with Multicall"},"aggregate3((address,bool,bytes)[])":{"notice":"Aggregate calls, ensuring each returns success if required"},"aggregate3Value((address,bool,uint256,bytes)[])":{"notice":"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values"},"blockAndAggregate((address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"},"getBasefee()":{"notice":"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain"},"getBlockHash(uint256)":{"notice":"Returns the block hash for the given block number"},"getBlockNumber()":{"notice":"Returns the block number"},"getChainId()":{"notice":"Returns the chain id"},"getCurrentBlockCoinbase()":{"notice":"Returns the block coinbase"},"getCurrentBlockDifficulty()":{"notice":"Returns the block difficulty"},"getCurrentBlockGasLimit()":{"notice":"Returns the block gas limit"},"getCurrentBlockTimestamp()":{"notice":"Returns the block timestamp"},"getEthBalance(address)":{"notice":"Returns the (ETH) balance of a given address"},"getLastBlockHash()":{"notice":"Returns the block hash of the last block"},"tryAggregate(bool,(address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls without requiring success"},"tryBlockAndAggregate(bool,(address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@dittoeth/=node_modules/@dittoeth/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin-v5/=node_modules/@openzeppelin-v5/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/math/src/","contracts/=contracts/","deploy/=deploy/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/@dittoeth/forge-std/src/","interfaces/=interfaces/","solmate/=node_modules/solmate/src/","test-gas/=test-gas/","test/=test/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"deploy/MultiCall3.sol":"Multicall3"},"evmVersion":"shanghai","libraries":{}},"sources":{"deploy/MultiCall3.sol":{"keccak256":"0x6e9c3a2d4d8a575e8f915c29f60deb64c9182a066eb0808df1a30cb6ba1604ef","urls":["bzz-raw://5aa319cd6412bd2f794b5f145fea0aa2f5ecf58c6f4550d6eb8165035e275a46","dweb:/ipfs/QmUQE8KHzHwgQG3em4zz1f5iyEy6JzPKzxD43ERbogw3hu"],"license":"MIT"}},"version":1},"id":64}